{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather-app container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"favorites-list\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"weather-info card text-center p-4 animated-fade-in\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"temperature\"\n};\nconst _hoisted_7 = {\n  class: \"font-weight-bold\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", {\n    class: \"text-center mb-4\"\n  }, \"Погода в городе\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.fetchWeather && $options.fetchWeather(...args), [\"prevent\"])),\n    class: \"form-inline justify-content-center mb-4\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Введите название города\",\n    required: \"\",\n    class: \"form-control mr-2\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.unit = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.fetchWeather && $options.fetchWeather(...args)),\n    class: \"form-control mr-2\"\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"option\", {\n    value: \"metric\"\n  }, \"Цельсий\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"imperial\"\n  }, \"Фаренгейт\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.unit]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary animated-button\"\n  }, \"Получить погоду\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addToFavorites && $options.addToFavorites(...args)),\n    class: \"btn btn-success animated-button\"\n  }, \"Добавить в избранное\")], 32 /* NEED_HYDRATION */), _createElementVNode(\"div\", _hoisted_2, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Избранные города\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favorites, (favorite, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createTextVNode(_toDisplayString(favorite) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromFavorites(index),\n      class: \"btn btn-danger btn-sm\"\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_3)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.weather ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"h2\", null, _toDisplayString($data.weather.city), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $options.weatherIcon,\n    alt: \"Weather icon\",\n    class: \"weather-icon animated-icon\"\n  }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"p\", _hoisted_6, [_cache[8] || (_cache[8] = _createTextVNode(\" Температура: \")), _createElementVNode(\"span\", _hoisted_7, _toDisplayString($data.weather.temperature) + \" °\" + _toDisplayString($data.unit === 'metric' ? 'C' : 'F'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Описание: \" + _toDisplayString($data.weather.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Время получения: \" + _toDisplayString(new Date($data.weather.timestamp).toLocaleString()), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","fetchWeather","type","$event","$data","city","placeholder","required","unit","onChange","value","onClick","addToFavorites","_hoisted_2","_Fragment","_renderList","favorites","favorite","index","_createTextVNode","_toDisplayString","removeFromFavorites","_hoisted_3","weather","_hoisted_4","src","weatherIcon","alt","_hoisted_5","_hoisted_6","_hoisted_7","temperature","Date","timestamp","toLocaleString","_createCommentVNode"],"sources":["C:\\Users\\vladik\\weather-app\\client\\src\\components\\WeatherComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather-app container mt-5\">\r\n    <h1 class=\"text-center mb-4\">Погода в городе</h1>\r\n    <form @submit.prevent=\"fetchWeather\" class=\"form-inline justify-content-center mb-4\">\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"city\"\r\n        placeholder=\"Введите название города\"\r\n        required\r\n        class=\"form-control mr-2\"\r\n      />\r\n      <select v-model=\"unit\" @change=\"fetchWeather\" class=\"form-control mr-2\">\r\n        <option value=\"metric\">Цельсий</option>\r\n        <option value=\"imperial\">Фаренгейт</option>\r\n      </select>\r\n      <button type=\"submit\" class=\"btn btn-primary animated-button\">Получить погоду</button>\r\n      <button @click=\"addToFavorites\" class=\"btn btn-success animated-button\">Добавить в избранное</button>\r\n    </form>\r\n\r\n    <div class=\"favorites-list\">\r\n      <h2>Избранные города</h2>\r\n      <ul>\r\n        <li v-for=\"(favorite, index) in favorites\" :key=\"index\">\r\n          {{ favorite }} <button @click=\"removeFromFavorites(index)\" class=\"btn btn-danger btn-sm\">Удалить</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"weather\" class=\"weather-info card text-center p-4 animated-fade-in\">\r\n      <h2>{{ weather.city }}</h2>\r\n      <img :src=\"weatherIcon\" alt=\"Weather icon\" class=\"weather-icon animated-icon\" />\r\n      <p class=\"temperature\">\r\n        Температура: <span class=\"font-weight-bold\">{{ weather.temperature }} °{{ unit === 'metric' ? 'C' : 'F' }}</span>\r\n      </p>\r\n      <p>Описание: {{ weather.weather }}</p>\r\n      <p>Время получения: {{ new Date(weather.timestamp).toLocaleString() }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport sunny from '../assets/weather-icons/sunny.png';\r\nimport cloudy from '../assets/weather-icons/cloudy.png';\r\nimport rainy from '../assets/weather-icons/rainy.png';\r\nimport snow from '../assets/weather-icons/snow.png';\r\nimport fog from '../assets/weather-icons/fog.png';\r\nimport unknown from '../assets/weather-icons/unknown.png';\r\n\r\nexport default {\r\n  name: \"WeatherComponent\",\r\n  data() {\r\n    return {\r\n      city: '',\r\n      weather: null,\r\n      unit: 'metric',\r\n      weatherIcons: {\r\n        'ясно': sunny,\r\n        'облачно': cloudy,\r\n        'пасмурно': cloudy,\r\n        'дождь': rainy,\r\n        'ливень': rainy,\r\n        'снег': snow,\r\n        'туман': fog,\r\n      },\r\n      favorites: JSON.parse(localStorage.getItem('favorites')) || [], // Получение избранных городов из localStorage\r\n    };\r\n  },\r\n  computed: {\r\n    weatherIcon() {\r\n      return this.weather ? this.weatherIcons[this.weather.weather] || unknown : null;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchWeather() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/weather', {\r\n          city: this.city,\r\n          unit: this.unit,\r\n        });\r\n        this.weather = response.data;\r\n      } catch (error) {\r\n        console.error('Ошибка получения погоды:', error);\r\n      }\r\n    },\r\n    refreshWeather() {\r\n      if (this.weather) {\r\n        this.fetchWeather();\r\n      }\r\n    },\r\n    addToFavorites() {\r\n      if (this.city && !this.favorites.includes(this.city)) {\r\n        this.favorites.push(this.city);\r\n        localStorage.setItem('favorites', JSON.stringify(this.favorites)); // Сохранение в localStorage\r\n      }\r\n    },\r\n    removeFromFavorites(index) {\r\n      this.favorites.splice(index, 1);\r\n      localStorage.setItem('favorites', JSON.stringify(this.favorites)); // Обновление localStorage\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  background: url('../assets/background.jpg') no-repeat center center fixed;\r\n  background-size: cover;\r\n  font-family: 'Arial', sans-serif;\r\n  color: #333;\r\n}\r\n.weather-app {\r\n  background: rgba(255, 255, 255, 0.9);\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\r\n}\r\n.weather-info {\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n}\r\n.weather-icon {\r\n  width: 100px;\r\n  height: 100px;\r\n}\r\n.temperature {\r\n  font-size: 1.5rem;\r\n}\r\n.favorites-list {\r\n  margin-top: 20px;\r\n}\r\n.favorites-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n.animated-fade-in {\r\n  animation: fadeIn 1s ease-in-out;\r\n}\r\n.animated-button {\r\n  transition: all 0.3s ease;\r\n  margin-left: 5px;\r\n}\r\n.animated-button:hover {\r\n  transform: scale(1.1);\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}