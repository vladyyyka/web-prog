{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: \"WeatherComponent\",\n  data() {\n    return {\n      city: '',\n      weather: null,\n      unit: 'metric'\n    };\n  },\n  methods: {\n    async fetchWeather() {\n      try {\n        const response = await axios.post('http://localhost:5000/weather', {\n          city: this.city\n        });\n        this.weather = response.data;\n      } catch (error) {\n        console.error('Ошибка получения погоды:', error);\n      }\n    },\n    refreshWeather() {\n      if (this.weather) {\n        this.fetchWeather();\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","city","weather","unit","methods","fetchWeather","response","post","error","console","refreshWeather"],"sources":["C:\\Users\\vladik\\weather-app\\client\\src\\components\\WeatherComponent.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Погода в городе</h1>\r\n    <form @submit.prevent=\"fetchWeather\">\r\n      <input type=\"text\" v-model=\"city\" placeholder=\"Введите название города\" required />\r\n      <button type=\"submit\">Получить погоду</button>\r\n      <select v-model=\"unit\">\r\n        <option value=\"metric\">Цельсий</option>\r\n        <option value=\"imperial\">Фаренгейт</option>\r\n      </select>\r\n    </form>\r\n    <button @click=\"refreshWeather\">Обновить</button>\r\n\r\n    <div v-if=\"weather\">\r\n      <h2>{{ weather.city }}</h2>\r\n      <p>Температура: {{ weather.temperature }} °{{ unit === 'metric' ? 'C' : 'F' }}</p>\r\n      <p>Описание: {{ weather.weather }}</p>\r\n      <p>Время получения: {{ new Date(weather.timestamp).toLocaleString() }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"WeatherComponent\",\r\n  data() {\r\n    return {\r\n      city: '',\r\n      weather: null,\r\n      unit: 'metric',\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchWeather() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/weather', {\r\n          city: this.city,\r\n        });\r\n        this.weather = response.data;\r\n      } catch (error) {\r\n        console.error('Ошибка получения погоды:', error);\r\n      }\r\n    },\r\n    refreshWeather() {\r\n      if (this.weather) {\r\n        this.fetchWeather();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Добавьте стили по своему усмотрению */\r\n</style>\r\n"],"mappings":"AAuBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,kBAAkB;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,EAAE;MACRC,OAAO,EAAE,IAAI;MACbC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,+BAA+B,EAAE;UACjEN,IAAI,EAAE,IAAI,CAACA;QACb,CAAC,CAAC;QACF,IAAI,CAACC,OAAM,GAAII,QAAQ,CAACN,IAAI;MAC9B,EAAE,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDE,cAAcA,CAAA,EAAG;MACf,IAAI,IAAI,CAACR,OAAO,EAAE;QAChB,IAAI,CAACG,YAAY,CAAC,CAAC;MACrB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}