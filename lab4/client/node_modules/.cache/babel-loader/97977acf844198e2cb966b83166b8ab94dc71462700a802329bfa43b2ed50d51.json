{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather-app container mt-5\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"weather-info card text-center p-4\"\n};\nconst _hoisted_3 = [\"src\"];\nconst _hoisted_4 = {\n  class: \"temperature\"\n};\nconst _hoisted_5 = {\n  class: \"font-weight-bold\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[8] || (_cache[8] = _createElementVNode(\"h1\", {\n    class: \"text-center mb-4\"\n  }, \"Погода в городе\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.fetchWeather && $options.fetchWeather(...args), [\"prevent\"])),\n    class: \"form-inline justify-content-center mb-4\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Введите название города\",\n    required: \"\",\n    class: \"form-control mr-2\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.unit = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.fetchWeather && $options.fetchWeather(...args)),\n    class: \"form-control mr-2\"\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"option\", {\n    value: \"metric\"\n  }, \"Цельсий\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"imperial\"\n  }, \"Фаренгейт\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.unit]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\"\n  }, \"Получить погоду\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.refreshWeather && $options.refreshWeather(...args)),\n    class: \"btn btn-secondary mb-4\"\n  }, \"Обновить\"), $data.weather ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, _toDisplayString($data.weather.city), 1 /* TEXT */), _createElementVNode(\"img\", {\n    src: $options.weatherIcon,\n    alt: \"Weather icon\",\n    class: \"weather-icon\"\n  }, null, 8 /* PROPS */, _hoisted_3), _createElementVNode(\"p\", _hoisted_4, [_cache[7] || (_cache[7] = _createTextVNode(\" Температура: \")), _createElementVNode(\"span\", _hoisted_5, _toDisplayString($data.weather.temperature) + \" °\" + _toDisplayString($data.unit === 'metric' ? 'C' : 'F'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Описание: \" + _toDisplayString($data.weather.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Время получения: \" + _toDisplayString(new Date($data.weather.timestamp).toLocaleString()), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","fetchWeather","type","$event","$data","city","placeholder","required","unit","onChange","value","onClick","refreshWeather","weather","_hoisted_2","_toDisplayString","src","weatherIcon","alt","_hoisted_3","_hoisted_4","_createTextVNode","_hoisted_5","temperature","Date","timestamp","toLocaleString","_createCommentVNode"],"sources":["C:\\Users\\vladik\\weather-app\\client\\src\\components\\WeatherComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather-app container mt-5\">\r\n    <h1 class=\"text-center mb-4\">Погода в городе</h1>\r\n    <form @submit.prevent=\"fetchWeather\" class=\"form-inline justify-content-center mb-4\">\r\n      <input\r\n        type=\"text\"\r\n        v-model=\"city\"\r\n        placeholder=\"Введите название города\"\r\n        required\r\n        class=\"form-control mr-2\"\r\n      />\r\n      <select v-model=\"unit\" @change=\"fetchWeather\" class=\"form-control mr-2\">\r\n        <option value=\"metric\">Цельсий</option>\r\n        <option value=\"imperial\">Фаренгейт</option>\r\n      </select>\r\n      <button type=\"submit\" class=\"btn btn-primary\">Получить погоду</button>\r\n    </form>\r\n    <button @click=\"refreshWeather\" class=\"btn btn-secondary mb-4\">Обновить</button>\r\n\r\n    <div v-if=\"weather\" class=\"weather-info card text-center p-4\">\r\n      <h2>{{ weather.city }}</h2>\r\n      <img :src=\"weatherIcon\" alt=\"Weather icon\" class=\"weather-icon\"/>\r\n      <p class=\"temperature\">\r\n        Температура: <span class=\"font-weight-bold\">{{ weather.temperature }} °{{ unit === 'metric' ? 'C' : 'F' }}</span>\r\n      </p>\r\n      <p>Описание: {{ weather.weather }}</p>\r\n      <p>Время получения: {{ new Date(weather.timestamp).toLocaleString() }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport sunny from '../assets/weather-icons/sunny.png';\r\nimport cloudy from '../assets/weather-icons/cloudy.png';\r\nimport rainy from '../assets/weather-icons/rainy.png';\r\n\r\nexport default {\r\n  name: \"WeatherComponent\",\r\n  data() {\r\n    return {\r\n      city: '',\r\n      weather: null,\r\n      unit: 'metric',\r\n      favoriteCities: [],\r\n      weatherIcons: {\r\n        'ясно': sunny,\r\n        'облачно': cloudy,\r\n        'дождь': rainy,\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    weatherIcon() {\r\n      return this.weather ? this.weatherIcons[this.weather.weather] || sunny : null;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchWeather() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/weather', {\r\n          city: this.city,\r\n          unit: this.unit, // Передаем единицы измерения\r\n        });\r\n        this.weather = response.data;\r\n      } catch (error) {\r\n        console.error('Ошибка получения погоды:', error);\r\n      }\r\n    },\r\n    refreshWeather() {\r\n      if (this.weather) {\r\n        this.fetchWeather();\r\n      }\r\n    },\r\n    addFavoriteCity() {\r\n      if (!this.favoriteCities.includes(this.city)) {\r\n        this.favoriteCities.push(this.city);\r\n        localStorage.setItem('favoriteCities', JSON.stringify(this.favoriteCities));\r\n      }\r\n    },\r\n    loadFavoriteCities() {\r\n      const cities = JSON.parse(localStorage.getItem('favoriteCities'));\r\n      if (cities) {\r\n        this.favoriteCities = cities;\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.loadFavoriteCities();\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAA4B;;EADzCC,GAAA;EAmBwBD,KAAK,EAAC;;mBAnB9B;;EAsBSA,KAAK,EAAC;AAAa;;EACDA,KAAK,EAAC;AAAkB;;uBAtBjDE,mBAAA,CA2BM,OA3BNC,UA2BM,G,0BA1BJC,mBAAA,CAAiD;IAA7CJ,KAAK,EAAC;EAAkB,GAAC,iBAAe,sBAC5CI,mBAAA,CAaO;IAbAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAER,KAAK,EAAC;sBACzCI,mBAAA,CAME;IALAO,IAAI,EAAC,MAAM;IALnB,uBAAAL,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAMiBC,KAAA,CAAAC,IAAI,GAAAF,MAAA;IACbG,WAAW,EAAC,yBAAyB;IACrCC,QAAQ,EAAR,EAAQ;IACRhB,KAAK,EAAC;iDAHGa,KAAA,CAAAC,IAAI,E,mBAKfV,mBAAA,CAGS;IAdf,uBAAAE,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAWuBC,KAAA,CAAAI,IAAI,GAAAL,MAAA;IAAGM,QAAM,EAAAZ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;IAAER,KAAK,EAAC;gCAClDI,mBAAA,CAAuC;IAA/Be,KAAK,EAAC;EAAQ,GAAC,SAAO,qBAC9Bf,mBAAA,CAA2C;IAAnCe,KAAK,EAAC;EAAU,GAAC,WAAS,oB,2DAFnBN,KAAA,CAAAI,IAAI,E,6BAIrBb,mBAAA,CAAsE;IAA9DO,IAAI,EAAC,QAAQ;IAACX,KAAK,EAAC;KAAkB,iBAAe,qB,4BAE/DI,mBAAA,CAAgF;IAAvEgB,OAAK,EAAAd,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAY,cAAA,IAAAZ,QAAA,CAAAY,cAAA,IAAAb,IAAA,CAAc;IAAER,KAAK,EAAC;KAAyB,UAAQ,GAE5Da,KAAA,CAAAS,OAAO,I,cAAlBpB,mBAAA,CAQM,OARNqB,UAQM,GAPJnB,mBAAA,CAA2B,YAAAoB,gBAAA,CAApBX,KAAA,CAAAS,OAAO,CAACR,IAAI,kBACnBV,mBAAA,CAAiE;IAA3DqB,GAAG,EAAEhB,QAAA,CAAAiB,WAAW;IAAEC,GAAG,EAAC,cAAc;IAAC3B,KAAK,EAAC;0BArBvD4B,UAAA,GAsBMxB,mBAAA,CAEI,KAFJyB,UAEI,G,0BAxBVC,gBAAA,CAsB6B,gBACR,IAAA1B,mBAAA,CAAoG,QAApG2B,UAAoG,EAAAP,gBAAA,CAAlEX,KAAA,CAAAS,OAAO,CAACU,WAAW,IAAG,IAAE,GAAAR,gBAAA,CAAGX,KAAA,CAAAI,IAAI,0C,GAEhFb,mBAAA,CAAsC,WAAnC,YAAU,GAAAoB,gBAAA,CAAGX,KAAA,CAAAS,OAAO,CAACA,OAAO,kBAC/BlB,mBAAA,CAA0E,WAAvE,mBAAiB,GAAAoB,gBAAA,KAAOS,IAAI,CAACpB,KAAA,CAAAS,OAAO,CAACY,SAAS,EAAEC,cAAc,mB,KA1BvEC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}