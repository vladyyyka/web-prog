{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, vModelSelect as _vModelSelect, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"weather-app container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"search-container text-center mb-4\"\n};\nconst _hoisted_3 = {\n  class: \"favorites-list\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"weather-info card text-center p-4 animated-fade-in\"\n};\nconst _hoisted_7 = {\n  class: \"icon-container\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = {\n  class: \"temperature\"\n};\nconst _hoisted_10 = {\n  class: \"font-weight-bold\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[9] || (_cache[9] = _createElementVNode(\"h1\", {\n    class: \"text-center mb-4\"\n  }, \"Погода в городе\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.fetchWeather && $options.fetchWeather(...args), [\"prevent\"])),\n    class: \"form-inline justify-content-center\"\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.city = $event),\n    placeholder: \"Введите город\",\n    required: \"\",\n    class: \"form-control city-input\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.city]]), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.unit = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.fetchWeather && $options.fetchWeather(...args)),\n    class: \"form-control unit-select\"\n  }, _cache[5] || (_cache[5] = [_createElementVNode(\"option\", {\n    value: \"metric\"\n  }, \"°C\", -1 /* HOISTED */), _createElementVNode(\"option\", {\n    value: \"imperial\"\n  }, \"°F\", -1 /* HOISTED */)]), 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelSelect, $data.unit]]), _cache[6] || (_cache[6] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary search-button\"\n  }, [_createElementVNode(\"i\", {\n    class: \"fas fa-search\"\n  })], -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.addToFavorites && $options.addToFavorites(...args)),\n    class: \"btn btn-success ml-2\"\n  }, \"Добавить в избранное\")], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"Избранные города\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.favorites, (favorite, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.fetchFavoriteWeather(favorite),\n      class: \"btn btn-link\"\n    }, _toDisplayString(favorite), 9 /* TEXT, PROPS */, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => $options.removeFromFavorites(index),\n      class: \"btn btn-danger btn-sm\"\n    }, \"Удалить\", 8 /* PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.weather ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createElementVNode(\"h2\", null, _toDisplayString($data.weather.city), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    src: $options.weatherIcon,\n    alt: \"Weather icon\",\n    class: \"weather-icon animated-icon\"\n  }, null, 8 /* PROPS */, _hoisted_8)]), _createElementVNode(\"p\", _hoisted_9, [_cache[8] || (_cache[8] = _createTextVNode(\" Температура: \")), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($data.weather.temperature) + \" °\" + _toDisplayString($data.unit === 'metric' ? 'C' : 'F'), 1 /* TEXT */)]), _createElementVNode(\"p\", null, \"Описание: \" + _toDisplayString($data.weather.weather), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Время получения: \" + _toDisplayString(new Date($data.weather.timestamp).toLocaleString()), 1 /* TEXT */)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","fetchWeather","type","$event","$data","city","placeholder","required","unit","onChange","value","onClick","addToFavorites","_hoisted_3","_Fragment","_renderList","favorites","favorite","index","fetchFavoriteWeather","_hoisted_4","removeFromFavorites","_hoisted_5","weather","_hoisted_6","_toDisplayString","_hoisted_7","src","weatherIcon","alt","_hoisted_8","_hoisted_9","_createTextVNode","_hoisted_10","temperature","Date","timestamp","toLocaleString","_createCommentVNode"],"sources":["C:\\Users\\vladik\\weather-app\\client\\src\\components\\WeatherComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"weather-app container mt-5\">\r\n    <h1 class=\"text-center mb-4\">Погода в городе</h1>\r\n    \r\n    <div class=\"search-container text-center mb-4\">\r\n      <form @submit.prevent=\"fetchWeather\" class=\"form-inline justify-content-center\">\r\n        <input\r\n          type=\"text\"\r\n          v-model=\"city\"\r\n          placeholder=\"Введите город\"\r\n          required\r\n          class=\"form-control city-input\"\r\n        />\r\n        <select v-model=\"unit\" @change=\"fetchWeather\" class=\"form-control unit-select\">\r\n          <option value=\"metric\">°C</option>\r\n          <option value=\"imperial\">°F</option>\r\n        </select>\r\n        <button type=\"submit\" class=\"btn btn-primary search-button\">\r\n          <i class=\"fas fa-search\"></i>\r\n        </button>\r\n        <button @click=\"addToFavorites\" class=\"btn btn-success ml-2\">Добавить в избранное</button>\r\n      </form>\r\n    </div>\r\n\r\n    <div class=\"favorites-list\">\r\n      <h2>Избранные города</h2>\r\n      <ul>\r\n        <li v-for=\"(favorite, index) in favorites\" :key=\"index\">\r\n          <button @click=\"fetchFavoriteWeather(favorite)\" class=\"btn btn-link\">\r\n            {{ favorite }}\r\n          </button>\r\n          <button @click=\"removeFromFavorites(index)\" class=\"btn btn-danger btn-sm\">Удалить</button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n    <div v-if=\"weather\" class=\"weather-info card text-center p-4 animated-fade-in\">\r\n      <h2>{{ weather.city }}</h2>\r\n      <div class=\"icon-container\">\r\n        <img :src=\"weatherIcon\" alt=\"Weather icon\" class=\"weather-icon animated-icon\" />\r\n      </div>\r\n      <p class=\"temperature\">\r\n        Температура: <span class=\"font-weight-bold\">{{ weather.temperature }} °{{ unit === 'metric' ? 'C' : 'F' }}</span>\r\n      </p>\r\n      <p>Описание: {{ weather.weather }}</p>\r\n      <p>Время получения: {{ new Date(weather.timestamp).toLocaleString() }}</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport sunny from '../assets/weather-icons/sunny.png';\r\nimport cloudy from '../assets/weather-icons/cloudy.png';\r\nimport rainy from '../assets/weather-icons/rainy.png';\r\nimport snow from '../assets/weather-icons/snow.png';\r\nimport fog from '../assets/weather-icons/fog.png';\r\nimport unknown from '../assets/weather-icons/unknown.png';\r\n\r\nexport default {\r\n  name: \"WeatherComponent\",\r\n  data() {\r\n    return {\r\n      city: '',\r\n      weather: null,\r\n      unit: 'metric',\r\n      weatherIcons: {\r\n        'ясно': sunny,\r\n        'облачно': cloudy,\r\n        'пасмурно': cloudy,\r\n        'дождь': rainy,\r\n        'ливень': rainy,\r\n        'снег': snow,\r\n        'туман': fog,\r\n      },\r\n      favorites: JSON.parse(localStorage.getItem('favorites')) || [],\r\n    };\r\n  },\r\n  computed: {\r\n    weatherIcon() {\r\n      return this.weather ? this.weatherIcons[this.weather.weather] || unknown : null;\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchWeather() {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/weather', {\r\n          city: this.city,\r\n          unit: this.unit,\r\n        });\r\n        this.weather = response.data;\r\n      } catch (error) {\r\n        console.error('Ошибка получения погоды:', error);\r\n      }\r\n    },\r\n    async fetchFavoriteWeather(favorite) {\r\n      this.city = favorite; // Устанавливаем город для отображения\r\n      await this.fetchWeather(); // Получаем погоду для избранного города\r\n    },\r\n    addToFavorites() {\r\n      if (this.city && !this.favorites.includes(this.city)) {\r\n        this.favorites.push(this.city);\r\n        localStorage.setItem('favorites', JSON.stringify(this.favorites));\r\n      }\r\n    },\r\n    removeFromFavorites(index) {\r\n      this.favorites.splice(index, 1);\r\n      localStorage.setItem('favorites', JSON.stringify(this.favorites));\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nbody {\r\n  background: linear-gradient(to bottom right, #73c8a9, #373b44);\r\n  font-family: 'Arial', sans-serif;\r\n  color: #fff;\r\n}\r\n.weather-app {\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 15px;\r\n  padding: 20px;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);\r\n}\r\n.search-container {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n.city-input {\r\n  width: 200px; /* Установите ширину для поля ввода */\r\n  margin-right: 10px; /* Отступ справа */\r\n}\r\n.unit-select {\r\n  margin-right: 10px; /* Отступ справа */\r\n}\r\n.search-button {\r\n  margin-left: 5px; /* Отступ слева */\r\n}\r\n.weather-info {\r\n  margin-top: 20px;\r\n  border-radius: 8px;\r\n  background: rgba(255, 255, 255, 0.2);\r\n}\r\n.icon-container {\r\n  display: flex;\r\n  justify-content: center; /* Центрирование изображения */\r\n  margin-bottom: 15px; /* Отступ снизу */\r\n}\r\n.weather-icon {\r\n  width: 120px; /* Увеличение размера изображения */\r\n  height: 120px;\r\n}\r\n.temperature {\r\n  font-size: 1.5rem;\r\n}\r\n.favorites-list {\r\n  margin-top: 20px;\r\n}\r\n.favorites-list ul {\r\n  list-style: none;\r\n  padding: 0;\r\n}\r\n.btn-link {\r\n  color: #fff;\r\n  text-decoration: none;\r\n}\r\n.btn-link:hover {\r\n  text-decoration: underline;\r\n}\r\n.animated-fade-in {\r\n  animation: fadeIn 1s ease-in-out;\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from { opacity: 0; }\r\n  to { opacity: 1; }\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}